// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectef;

#nullable disable

namespace projectef.Migrations
{
    [DbContext(typeof(TaskContext))]
    partial class TaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projectef.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("d93a7c12-af4b-433a-ab44-8a94e2135bca"),
                            Name = "Actividades pendientes",
                            Weight = 20
                        },
                        new
                        {
                            CategoryId = new Guid("d4946f70-bfa7-41ea-b33b-8447b9d1f8dc"),
                            Name = "Actividades personales",
                            Weight = 50
                        },
                        new
                        {
                            CategoryId = new Guid("d4946f70-bfa7-41ea-b33b-8447b9d1f8de"),
                            Name = "Actividades de terceros",
                            Weight = 5
                        });
                });

            modelBuilder.Entity("projectef.Models.Task", b =>
                {
                    b.Property<Guid?>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriorityTask")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("6d996402-9beb-4490-b50f-5a170c21c6b3"),
                            CategoryId = new Guid("d93a7c12-af4b-433a-ab44-8a94e2135bca"),
                            CreateDate = new DateTime(2023, 3, 14, 10, 22, 51, 160, DateTimeKind.Local).AddTicks(3393),
                            Owner = "Yusdenys Perez",
                            PriorityTask = 1,
                            Title = "Pago servicios publicos"
                        },
                        new
                        {
                            TaskId = new Guid("d1555e02-9d28-4d87-834a-c2d9c9a2c2c4"),
                            CategoryId = new Guid("d4946f70-bfa7-41ea-b33b-8447b9d1f8dc"),
                            CreateDate = new DateTime(2023, 3, 14, 10, 22, 51, 160, DateTimeKind.Local).AddTicks(3439),
                            Owner = "Yusdenys Perez",
                            PriorityTask = 2,
                            Title = "Pago servicios privados"
                        },
                        new
                        {
                            TaskId = new Guid("d1555e02-9d28-4d87-834a-c2d9c9a2c2c5"),
                            CategoryId = new Guid("d4946f70-bfa7-41ea-b33b-8447b9d1f8de"),
                            CreateDate = new DateTime(2023, 3, 14, 10, 22, 51, 160, DateTimeKind.Local).AddTicks(3443),
                            Owner = "Yusdenys Perez",
                            PriorityTask = 0,
                            Title = "Llamar telefono"
                        });
                });

            modelBuilder.Entity("projectef.Models.Task", b =>
                {
                    b.HasOne("projectef.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("projectef.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
